import React, { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';

export type Locale = 'en' | 'zh-CN';

interface Messages {
  [key: string]: string | Messages;
}

interface I18nContextValue {
  locale: Locale;
  setLocale: (l: Locale) => void;
  t: (key: string) => string;
}

const defaultMessages: Record<Locale, Messages> = {
  en: {
    common: {
      backHome: '‚Üê Back to Home',
      home: 'Home',
      converter: 'Converter',
      help: 'Help',
      useNow: 'Use now',
      new: 'NEW',
      chooseFile: 'Choose File',
      dragHere: 'Drag files here',
      or: 'or',
      convertTo: 'Convert to',
      advancedSettings: 'Advanced Settings (Optional)',
      conversionSettings: 'Conversion Settings',
      brandName: 'JFIF to JPG Tools',
      brandSlogan: 'Professional online image format converter',
      applyAll: 'Apply to all',
      applyToAll: 'Apply to all files',
      reset: 'Reset',
      resetOptions: 'Reset Options',
      footer: { security: 'Security Promise', ssl: 'SSL/TLS Encryption', access: 'Access Control', dataCenter: 'Secure Data Center' },
    },
    settings: {
      autoRotate: 'Auto-rotate',
      clearMetadata: 'Clear metadata',
      theme: 'Theme',
      themeLight: 'Light',
      themeDark: 'Dark',
      quality: 'Image quality',
      qualityLow: 'Low quality',
      qualityMedium: 'Medium quality',
      qualityHigh: 'High quality',
      compression: 'Compression level',
      compressionNone: 'None',
      compressionLow: 'Low',
      compressionMedium: 'Medium',
      compressionHigh: 'High',
      size: 'Size',
      sizeOriginal: 'Original size',
      sizeCustom: 'Custom size',
      size30: '30%',
      size50: '50%',
      size70: '70%',
      widthPx: 'Width (px)',
      heightPx: 'Height (px)',
      output: 'Output format',
    },
    conversion: {
      outputFormat: 'Output format',
      imageQuality: 'Image quality',
      resize: 'Resize',
      keepOriginal: 'Keep original size',
      customSize: 'Custom size',
      maintainAspectRatio: 'Maintain aspect ratio',
      widthPx: 'Width (px)',
      heightPx: 'Height (px)',
      controls: 'Conversion Controls',
      convertTo: 'Convert to',
      batch: 'Batch Convert',
      progress: 'Progress',
    },
    app: {
      title: 'JFIF to JPG Online Converter',
      subtitle: 'Free online convert JFIF to JPG (jfif to jpg), high quality, fast and secure.',
      nav: { others: 'Other conversions', features: 'Features', info: 'Info', faq: 'FAQ' },
      upload: { title: 'Choose File (JFIF to JPG)' },
      preview: { title: 'Preview (JFIF to JPG Comparison)' },
      dropdown: { toJPG: 'Convert to JPG', toPNG: 'Convert to PNG', toWEBP: 'Convert to WEBP', toBMP: 'Convert to BMP', toGIF: 'Convert to GIF' },
    },
    home: {
      relatedToolsTitle: 'Related Tools',
      securityTitle: 'Security Promise',
      ssl: 'SSL/TLS Encryption',
      access: 'Access Control',
      dataCenter: 'Secure Data Center',
      steps: { 
        selectTitle: 'Choose File', 
        selectDesc: 'Choose your JFIF file, drag & drop supported',
        convertTitle: 'Start Conversion',
        convertDesc: 'Click convert button, wait for processing',
        downloadTitle: 'Download Result',
        downloadDesc: 'Download JPG format image after conversion'
      },
      howToConvert: 'How to convert JFIF to JPG?',
      infoTitle: 'Information',
      faqTitle: 'FAQ (JFIF to JPG)',
      supportedFormats: 'All Supported Conversion Formats:',
      dataPriority: 'Your data, our priority',
      formats: {
        jfif: {
          title: 'What is JFIF?',
          desc: 'JPEG File Interchange Format (JFIF) is a simple file type for exchanging JPEG images. It is an older version of the JPG file format, supporting JPEG bitstreams.'
        },
        jpg: {
          title: 'What is JPG?',
          desc: 'JPG (Joint Photographic Experts Group) is a common file format that uses compression algorithms. It is currently the most widely used image file format, supported by most browsers and devices.'
        },
        png: {
          title: 'What is PNG?',
          desc: 'PNG (Portable Network Graphics) is a lossless compression image format that supports transparent backgrounds and true colors. It is suitable for images requiring high quality and transparency.'
        },
        webp: {
          title: 'What is WebP?',
          desc: 'WebP is a new generation image format developed by Google, supporting lossy and lossless compression. Its file size is smaller than JPG and PNG, making it an ideal choice for web optimization.'
        },
        bmp: {
          title: 'What is BMP?',
          desc: 'BMP (Bitmap) is a standard image format for Windows systems, usually uncompressed, resulting in larger file sizes but no loss of quality. It is suitable for scenarios requiring high-quality images.'
        },
        gif: {
          title: 'What is GIF?',
          desc: 'GIF (Graphics Interchange Format) supports animation and transparent backgrounds, but its color is limited to 256 colors. It is suitable for simple animated images and icons.'
        }
      },
      faq: {
        q1: 'How to quickly convert JFIF to JPG?',
        a1: 'Upload images by clicking "Select File (JFIF to JPG)" above, then click "Convert to JPG" to download. Supports batch processing and quality settings.',
        q2: 'Will conversion reduce image quality?',
        a2: 'JPG is a lossy compression format. You can adjust the quality percentage in "Conversion Settings" to balance file size and clarity, with a default of 90%.',
        q3: 'Do you support batch and large files?',
        a3: 'Supports batch upload and batch conversion; single file maximum 10MB, total size maximum 100MB, adjustable if needed.',
        q4: 'What about transparent backgrounds?',
        a4: 'JPG does not support transparency. If the source image contains transparent areas, it is recommended to convert to PNG or WebP to retain transparency.',
        q5: 'Will EXIF/shooting information be retained?',
        a5: 'You can choose to clear or retain metadata in "Advanced Settings (Optional)". Default is to clear to protect privacy and reduce file size.',
        q6: 'Is upload secure?',
        a6: 'Full HTTPS transmission, files are only used for conversion and cleaned up regularly after completion. We will not share your files or information externally.'
      },
      security: {
        sslDesc: '256-bit encrypted transmission',
        dataCenterDesc: 'ISO 27001 certified',
        accessDesc: 'Multi-factor authentication'
      },
      tools: {
        jfifToJpg: 'JFIF to JPG',
        jpgToJfif: 'JPG to JFIF',
        jfifToPng: 'JFIF to PNG',
        pngToJfif: 'PNG to JFIF',
        jfifToWebp: 'JFIF to WebP',
        webpToJfif: 'WebP to JFIF',
        jfifToBmp: 'JFIF to BMP',
        bmpToJfif: 'BMP to JFIF',
        jfifToGif: 'JFIF to GIF',
        gifToJfif: 'GIF to JFIF',
        jpgToPng: 'JPG to PNG',
        pngToJpg: 'PNG to JPG',
        jpgToWebp: 'JPG to WebP',
        webpToJpg: 'WebP to JPG',
        jpgToBmp: 'JPG to BMP',
        bmpToJpg: 'BMP to JPG',
        jpgToGif: 'JPG to GIF',
        gifToJpg: 'GIF to JPG',
        pngToWebp: 'PNG to WebP',
        webpToPng: 'WebP to PNG',
        pngToBmp: 'PNG to BMP',
        bmpToPng: 'BMP to PNG',
        pngToGif: 'PNG to GIF',
        gifToPng: 'GIF to PNG',
        webpToBmp: 'WebP to BMP',
        bmpToWebp: 'BMP to WebP',
        webpToGif: 'WebP to GIF',
        gifToWebp: 'GIF to WebP',
        bmpToGif: 'BMP to GIF',
        gifToBmp: 'GIF to BMP'
      },
      footer: {
        description: 'One-click online JFIF to JPG conversion. Free, fast, stable, supports batch and high-quality output.',
        howToUse: 'How to Use',
        formatKnowledge: 'Format Knowledge',
        startConversion: 'Start Conversion',
        converterLinks: {
          jfifToJpg: 'JFIF to JPG',
          pngToJpg: 'PNG to JPG',
          bmpToJpg: 'BMP to JPG',
          webpToJpg: 'WEBP to JPG'
        },
        aboutLinks: {
          privacy: 'Privacy Policy',
          terms: 'Terms of Service',
          about: 'About'
        }
      },
    },
    preview: {
      sectionTitle: 'Image Preview',
      emptyTitle: 'No image',
      emptyDesc: 'Please upload an image to start converting',
      original: 'Original',
      converted: 'Converted',
      download: 'Download',
      details: 'Details',
      reconvert: 'Reconvert',
      waiting: 'Waiting for conversion',
      clickToStart: 'Click the convert button below to start',
    },
    converter: {
      header: { title: 'Image Format Converter', batch: 'Batch', history: 'History', help: 'Help' },
      upload: 'Upload Images',
      stats: { uploaded: 'Uploaded', converted: 'Converted', progress: 'Progress' },
    },
    tools: {
      header: { title: 'Toolbox' },
      nav: { home: 'Home', converter: 'Converter', help: 'Help' },
      hero: { title: 'Powerful Image Toolbox', subtitle: 'A collection of handy image tools for your daily needs. From format conversion to editing, from single files to batch operations.' },
      categories: { convert: 'Image Conversion', process: 'Image Processing', doc: 'Document Tools', batch: 'Batch Tools' },
      card: { new: 'NEW', useNow: 'Use now' },
      cards: {
        'png-to-jpg': { title: 'PNG to JPG', desc: 'Convert PNG images to JPG, support batch' },
        'bmp-to-jpg': { title: 'BMP to JPG', desc: 'Convert BMP images to JPG, keep quality' },
        'gif-to-jpg': { title: 'GIF to JPG', desc: 'Convert GIF animation to JPG image' },
        'webp-to-jpg': { title: 'WebP to JPG', desc: 'Convert WebP images to JPG for compatibility' },
        'image-compress': { title: 'Image Compression', desc: 'Smartly compress images while keeping quality' },
        'image-resize': { title: 'Image Resize', desc: 'Resize images, batch supported' },
        'image-rotate': { title: 'Image Rotate', desc: 'Rotate and flip images, multiple angles' },
        'image-crop': { title: 'Image Crop', desc: 'Crop precisely with custom area' },
        'image-to-pdf': { title: 'Image to PDF', desc: 'Merge images into a PDF file' },
        'pdf-to-image': { title: 'PDF to Image', desc: 'Convert PDF pages to images' },
        'batch-convert': { title: 'Batch Convert', desc: 'Convert formats in batch efficiently' },
        'batch-rename': { title: 'Batch Rename', desc: 'Rename images in batch with rules' },
      },
      why: { title: 'Why choose our toolbox?' },
    },
  },
  'zh-CN': {
    common: {
      backHome: '‚Üê ËøîÂõûÈ¶ñÈ°µ',
      home: 'È¶ñÈ°µ',
      converter: 'ËΩ¨Êç¢Âô®',
      help: 'Â∏ÆÂä©',
      useNow: 'Á´ãÂç≥‰ΩøÁî®',
      new: 'Êñ∞ÂäüËÉΩ',
      chooseFile: 'ÈÄâÊã©Êñá‰ª∂',
      dragHere: 'ÊãñÊãΩÊñá‰ª∂Âà∞ËøôÈáå',
      or: 'ÊàñËÄÖ',
      convertTo: 'ËΩ¨‰∏∫',
      advancedSettings: 'È´òÁ∫ßËÆæÁΩÆÔºàÂèØÈÄâÔºâ',
      conversionSettings: 'ËΩ¨Êç¢ËÆæÁΩÆ',
      brandName: 'JFIFËΩ¨JPGÂ∑•ÂÖ∑Á´ô',
      brandSlogan: '‰∏ì‰∏öÁöÑÂú®Á∫øÂõæÁâáÊ†ºÂºèËΩ¨Êç¢Â∑•ÂÖ∑',
      applyAll: 'Â∫îÁî®Âà∞ÂÖ®ÈÉ®',
      applyToAll: 'Â∫îÁî®Âà∞ÊâÄÊúâÊñá‰ª∂',
      reset: 'ÈáçÁΩÆ',
      resetOptions: 'ÈáçÁΩÆÈÄâÈ°π',
      footer: { security: 'ÂÆâÂÖ®ÊâøËØ∫', ssl: 'SSL/TLSÂä†ÂØÜ', access: 'ËÆøÈóÆÊéßÂà∂', dataCenter: 'ÂÆâÂÖ®Êï∞ÊçÆ‰∏≠ÂøÉ' },
    },
    settings: {
      autoRotate: 'Ëá™Âä®ÊóãËΩ¨',
      clearMetadata: 'Ê∏ÖÈô§ÂÖÉÊï∞ÊçÆ',
      theme: '‰∏ªÈ¢ò',
      themeLight: 'ÊµÖËâ≤',
      themeDark: 'Ê∑±Ëâ≤',
      quality: 'ÂõæÁâáË¥®Èáè',
      qualityLow: '‰ΩéË¥®Èáè',
      qualityMedium: '‰∏≠Á≠âË¥®Èáè',
      qualityHigh: 'È´òË¥®Èáè',
      compression: 'ÂéãÁº©Á≠âÁ∫ß',
      compressionNone: 'Êó†ÂéãÁº©',
      compressionLow: '‰ΩéÂéãÁº©',
      compressionMedium: '‰∏≠Á≠âÂéãÁº©',
      compressionHigh: 'È´òÂéãÁº©',
      size: 'Â∞∫ÂØ∏',
      sizeOriginal: 'ÂéüÂßãÂ∞∫ÂØ∏',
      sizeCustom: 'Ëá™ÂÆö‰πâÂ∞∫ÂØ∏',
      size30: '30%',
      size50: '50%',
      size70: '70%',
      widthPx: 'ÂÆΩÂ∫¶ (px)',
      heightPx: 'È´òÂ∫¶ (px)',
      output: 'ËæìÂá∫Ê†ºÂºè',
    },
    conversion: {
      outputFormat: 'ËæìÂá∫Ê†ºÂºè',
      imageQuality: 'ÂõæÁâáË¥®Èáè',
      resize: 'Â∞∫ÂØ∏Ë∞ÉÊï¥',
      keepOriginal: '‰øùÊåÅÂéüÂßãÂ∞∫ÂØ∏',
      customSize: 'Ëá™ÂÆö‰πâÂ∞∫ÂØ∏',
      maintainAspectRatio: '‰øùÊåÅÂÆΩÈ´òÊØî',
      widthPx: 'ÂÆΩÂ∫¶ (px)',
      heightPx: 'È´òÂ∫¶ (px)',
      controls: 'ËΩ¨Êç¢ÊéßÂà∂',
      convertTo: 'ËΩ¨Êç¢‰∏∫',
      batch: 'ÊâπÈáèËΩ¨Êç¢',
      progress: 'ËΩ¨Êç¢ËøõÂ∫¶',
    },
    app: {
      title: 'JFIF to JPG Âú®Á∫øËΩ¨Êç¢Âô®',
      subtitle: 'ÂÖçË¥πÂú®Á∫øJFIFËΩ¨JPGËΩ¨Êç¢Âô®ÔºåÊîØÊåÅÊâπÈáèËΩ¨Êç¢„ÄÅË¥®ÈáèË∞ÉËäÇ„ÄÅÂ∞∫ÂØ∏Ë∞ÉÊï¥„ÄÇÊãñÊãΩ‰∏ä‰º†Ôºå‰∏ÄÈîÆËΩ¨Êç¢Â§öÁßçÊ†ºÂºèÔºåÂø´ÈÄüÂÆâÂÖ®Êó†ÈúÄÊ≥®ÂÜå„ÄÇ',
      nav: { others: 'ÂÖ∂‰ªñËΩ¨Êç¢', features: 'ÁâπËâ≤', info: '‰ø°ÊÅØ', faq: 'Â∏∏ËßÅÈóÆÈ¢ò' },
      upload: { title: 'ÈÄâÊã©Êñá‰ª∂ÔºàJFIF to JPGÔºâ' },
      preview: { title: 'È¢ÑËßàÁªìÊûúÔºàJFIF ËΩ¨ JPG ÂØπÊØîÔºâ' },
      dropdown: { toJPG: 'ËΩ¨‰∏∫ JPG', toPNG: 'ËΩ¨‰∏∫ PNG', toWEBP: 'ËΩ¨‰∏∫ WEBP', toBMP: 'ËΩ¨‰∏∫ BMP', toGIF: 'ËΩ¨‰∏∫ GIF' },
    },
    home: {
      relatedToolsTitle: 'Áõ∏ÂÖ≥Â∑•ÂÖ∑',
      securityTitle: 'ÂÆâÂÖ®ÊâøËØ∫',
      ssl: 'SSL/TLSÂä†ÂØÜ',
      access: 'ËÆøÈóÆÊéßÂà∂',
      dataCenter: 'ÂÆâÂÖ®Êï∞ÊçÆ‰∏≠ÂøÉ',
      steps: { 
        selectTitle: 'ÈÄâÊã©Êñá‰ª∂', 
        selectDesc: 'ÈÄâÊã©ÊÇ®ÁöÑJFIFÊñá‰ª∂ÔºåÊîØÊåÅÊãñÊãΩ‰∏ä‰º†',
        convertTitle: 'ÂºÄÂßãËΩ¨Êç¢',
        convertDesc: 'ÁÇπÂáªËΩ¨Êç¢ÊåâÈíÆÔºåÁ≠âÂæÖÂ§ÑÁêÜÂÆåÊàê',
        downloadTitle: '‰∏ãËΩΩÁªìÊûú',
        downloadDesc: 'ËΩ¨Êç¢ÂÆåÊàêÂêé‰∏ãËΩΩJPGÊ†ºÂºèÂõæÁâá'
      },
      howToConvert: 'Â¶Ç‰ΩïËΩ¨Êç¢JFIFÂà∞JPGÔºü',
      infoTitle: '‰ø°ÊÅØ‰ªãÁªç',
      faqTitle: 'Â∏∏ËßÅÈóÆÈ¢òÔºàJFIF to JPGÔºâ',
      supportedFormats: 'ÊîØÊåÅÁöÑÊâÄÊúâËΩ¨Êç¢Ê†ºÂºèÔºö',
      dataPriority: 'ÊÇ®ÁöÑÊï∞ÊçÆÔºåÊàë‰ª¨ÁöÑ‰ºòÂÖà',
      formats: {
        jfif: {
          title: '‰ªÄ‰πàÊòØJFIFÔºü',
          desc: 'JPEGÊñá‰ª∂‰∫§Êç¢Ê†ºÂºè(JFIF)ÊòØ‰∏ÄÁßçÁÆÄÂçïÁöÑÊñá‰ª∂Á±ªÂûãÔºå‰æø‰∫éJPEGÂõæÂÉèÁöÑ‰∫§Êç¢„ÄÇÂÆÉÊòØJPGÊñá‰ª∂Ê†ºÂºèÁöÑÊóßÁâàÊú¨ÔºåÊîØÊåÅJPEGÊØîÁâπÊµÅ„ÄÇ'
        },
        jpg: {
          title: '‰ªÄ‰πàÊòØJPGÔºü',
          desc: 'JPG(ËÅîÂêàÂõæÂÉè‰∏ìÂÆ∂ÁªÑ)ÊòØ‰∏ÄÁßçÈÄöÁî®Êñá‰ª∂Ê†ºÂºèÔºå‰ΩøÁî®ÂéãÁº©ÁÆóÊ≥ï„ÄÇÂÆÉÊòØÁõÆÂâç‰ΩøÁî®ÊúÄÂπøÊ≥õÁöÑÂõæÂÉèÊñá‰ª∂Ê†ºÂºèÔºåÂ§ßÂ§öÊï∞ÊµèËßàÂô®ÂíåËÆæÂ§áÈÉΩÊîØÊåÅ„ÄÇ'
        },
        png: {
          title: '‰ªÄ‰πàÊòØPNGÔºü',
          desc: 'PNG(‰æøÊê∫ÂºèÁΩëÁªúÂõæÂΩ¢)ÊòØ‰∏ÄÁßçÊó†ÊçüÂéãÁº©ÁöÑÂõæÂÉèÊ†ºÂºèÔºåÊîØÊåÅÈÄèÊòéËÉåÊôØÂíåÁúüÂΩ©Ëâ≤„ÄÇÈÄÇÂêàÈúÄË¶ÅÈ´òË¥®ÈáèÂíåÈÄèÊòéÊïàÊûúÁöÑÂõæÂÉè„ÄÇ'
        },
        webp: {
          title: '‰ªÄ‰πàÊòØWebPÔºü',
          desc: 'WebPÊòØGoogleÂºÄÂèëÁöÑÊñ∞‰∏Ä‰ª£ÂõæÂÉèÊ†ºÂºèÔºåÊîØÊåÅÊúâÊçüÂíåÊó†ÊçüÂéãÁº©ÔºåÊñá‰ª∂‰ΩìÁßØÊØîJPGÂíåPNGÊõ¥Â∞èÔºåÊòØÁΩëÈ°µ‰ºòÂåñÁöÑÁêÜÊÉ≥ÈÄâÊã©„ÄÇ'
        },
        bmp: {
          title: '‰ªÄ‰πàÊòØBMPÔºü',
          desc: 'BMP(‰ΩçÂõæ)ÊòØWindowsÁ≥ªÁªüÁöÑÊ†áÂáÜÂõæÂÉèÊ†ºÂºèÔºåÈÄöÂ∏∏‰∏çÂéãÁº©ÔºåÊñá‰ª∂ËæÉÂ§ß‰ΩÜË¥®ÈáèÊó†Êçü„ÄÇÈÄÇÂêàÈúÄË¶ÅÈ´òË¥®ÈáèÂõæÂÉèÁöÑÂú∫ÊôØ„ÄÇ'
        },
        gif: {
          title: '‰ªÄ‰πàÊòØGIFÔºü',
          desc: 'GIF(ÂõæÂΩ¢‰∫§Êç¢Ê†ºÂºè)ÊîØÊåÅÂä®ÁîªÂíåÈÄèÊòéËÉåÊôØÔºå‰ΩÜÈ¢úËâ≤ÈôêÂà∂‰∏∫256Ëâ≤„ÄÇÈÄÇÂêàÁÆÄÂçïÁöÑÂä®ÁîªÂõæÂÉèÂíåÂõæÊ†á„ÄÇ'
        }
      },
      faq: {
        q1: 'Â¶Ç‰ΩïÊää JFIF Âø´ÈÄüËΩ¨Êç¢‰∏∫ JPGÔºü',
        a1: 'Âú®‰∏äÊñπ"ÈÄâÊã©Êñá‰ª∂ÔºàJFIF to JPGÔºâ"‰∏ä‰º†ÂõæÁâáÔºåÁÇπÂáª"ËΩ¨Êç¢‰∏∫ JPG"Âç≥ÂèØ‰∏ãËΩΩ„ÄÇÊîØÊåÅÊâπÈáèÂ§ÑÁêÜ‰∏éË¥®ÈáèËÆæÁΩÆ„ÄÇ',
        q2: 'ËΩ¨Êç¢‰ºöÈôç‰ΩéÁîªË¥®ÂêóÔºü',
        a2: 'JPG ‰∏∫ÊúâÊçüÂéãÁº©„ÄÇÊÇ®ÂèØ‰ª•Âú®"ËΩ¨Êç¢ËÆæÁΩÆ"‰∏≠Ë∞ÉÊï¥Ë¥®ÈáèÁôæÂàÜÊØî‰ª•Âπ≥Ë°°‰ΩìÁßØ‰∏éÊ∏ÖÊô∞Â∫¶ÔºåÈªòËÆ§‰∏∫ 90%„ÄÇ',
        q3: 'ÊîØÊåÅÊâπÈáè‰∏éÂ§ßÊñá‰ª∂ÂêóÔºü',
        a3: 'ÊîØÊåÅÊâπÈáè‰∏ä‰º†‰∏éÊâπÈáèËΩ¨Êç¢ÔºõÂçïÊñá‰ª∂ÊúÄÂ§ß 10MBÔºåÊÄªÂ§ßÂ∞èÊúÄÂ§ß 100MBÔºåÂèØÂú®ÈúÄË¶ÅÊó∂Ë∞ÉÊï¥„ÄÇ',
        q4: 'ÈÄèÊòéËÉåÊôØÊÄé‰πàÂäûÔºü',
        a4: 'JPG ‰∏çÊîØÊåÅÈÄèÊòé„ÄÇËã•Ê∫êÂõæÂê´ÈÄèÊòéÂå∫ÂüüÔºåÂª∫ËÆÆËΩ¨Êç¢‰∏∫ PNG Êàñ WebP ‰øùÁïôÈÄèÊòé„ÄÇ',
        q5: 'EXIF/ÊãçÊëÑ‰ø°ÊÅØ‰ºö‰øùÁïôÂêóÔºü',
        a5: 'ÂèØÂú®"È´òÁ∫ßËÆæÁΩÆÔºàÂèØÈÄâÔºâ"ÈáåÈÄâÊã©Ê∏ÖÈô§Êàñ‰øùÁïôÂÖÉÊï∞ÊçÆ„ÄÇÈªòËÆ§Ê∏ÖÈô§‰ª•‰øùÊä§ÈöêÁßÅÂπ∂Áº©Â∞è‰ΩìÁßØ„ÄÇ',
        q6: '‰∏ä‰º†ÊòØÂê¶ÂÆâÂÖ®Ôºü',
        a6: 'ÂÖ®Á®ã HTTPS ‰º†ËæìÔºåÊñá‰ª∂‰ªÖÁî®‰∫éËΩ¨Êç¢ÔºåÂÆåÊàêÂêéÂÆöÊúüÊ∏ÖÁêÜ„ÄÇÊàë‰ª¨‰∏ç‰ºöÂØπÂ§ñÂÖ±‰∫´ÊÇ®ÁöÑÊñá‰ª∂Êàñ‰ø°ÊÅØ„ÄÇ'
      },
      security: {
        sslDesc: '256‰ΩçÂä†ÂØÜ‰º†Ëæì',
        dataCenterDesc: 'ISO 27001ËÆ§ËØÅ',
        accessDesc: 'Â§öÈáçË∫´‰ªΩÈ™åËØÅ'
      },
      tools: {
        jfifToJpg: 'JFIFËΩ¨JPG',
        jpgToJfif: 'JPGËΩ¨JFIF',
        jfifToPng: 'JFIFËΩ¨PNG',
        pngToJfif: 'PNGËΩ¨JFIF',
        jfifToWebp: 'JFIFËΩ¨WebP',
        webpToJfif: 'WebPËΩ¨JFIF',
        jfifToBmp: 'JFIFËΩ¨BMP',
        bmpToJfif: 'BMPËΩ¨JFIF',
        jfifToGif: 'JFIFËΩ¨GIF',
        gifToJfif: 'GIFËΩ¨JFIF',
        jpgToPng: 'JPGËΩ¨PNG',
        pngToJpg: 'PNGËΩ¨JPG',
        jpgToWebp: 'JPGËΩ¨WebP',
        webpToJpg: 'WebPËΩ¨JPG',
        jpgToBmp: 'JPGËΩ¨BMP',
        bmpToJpg: 'BMPËΩ¨JPG',
        jpgToGif: 'JPGËΩ¨GIF',
        gifToJpg: 'GIFËΩ¨JPG',
        pngToWebp: 'PNGËΩ¨WebP',
        webpToPng: 'WebPËΩ¨PNG',
        pngToBmp: 'PNGËΩ¨BMP',
        bmpToPng: 'BMPËΩ¨PNG',
        pngToGif: 'PNGËΩ¨GIF',
        gifToPng: 'GIFËΩ¨PNG',
        webpToBmp: 'WebPËΩ¨BMP',
        bmpToWebp: 'BMPËΩ¨WebP',
        webpToGif: 'WebPËΩ¨GIF',
        gifToWebp: 'GIFËΩ¨WebP',
        bmpToGif: 'BMPËΩ¨GIF',
        gifToBmp: 'GIFËΩ¨BMP'
      },
      footer: {
        description: '‰∏ÄÈîÆÂÆåÊàê jfif to jpg Âú®Á∫øËΩ¨Êç¢„ÄÇÂÖçË¥π„ÄÅÂø´ÈÄü„ÄÅÁ®≥ÂÆöÔºåÊîØÊåÅÊâπÈáè‰∏éÈ´òË¥®ÈáèËæìÂá∫„ÄÇ',
        howToUse: 'Â¶Ç‰Ωï‰ΩøÁî®',
        formatKnowledge: 'Ê†ºÂºèÁü•ËØÜ',
        startConversion: 'ÂºÄÂßãËΩ¨Êç¢',
        converterLinks: {
          jfifToJpg: 'JFIF ËΩ¨ JPG',
          pngToJpg: 'PNG ËΩ¨ JPG',
          bmpToJpg: 'BMP ËΩ¨ JPG',
          webpToJpg: 'WEBP ËΩ¨ JPG'
        },
        aboutLinks: {
          privacy: 'ÈöêÁßÅÊîøÁ≠ñ',
          terms: 'ÊúçÂä°Êù°Ê¨æ',
          about: 'ÂÖ≥‰∫éÊàë‰ª¨'
        }
      },
    },
    preview: {
      sectionTitle: 'ÂõæÁâáÈ¢ÑËßà',
      emptyTitle: 'ÊöÇÊó†ÂõæÁâá',
      emptyDesc: 'ËØ∑ÂÖà‰∏ä‰º†ÂõæÁâáÊñá‰ª∂ÂºÄÂßãËΩ¨Êç¢',
      original: 'ÂéüÂßã',
      converted: 'ËΩ¨Êç¢Âêé',
      download: '‰∏ãËΩΩ',
      details: 'Êü•ÁúãËØ¶ÊÉÖ',
      reconvert: 'ÈáçÊñ∞ËΩ¨Êç¢',
      waiting: 'Á≠âÂæÖËΩ¨Êç¢',
      clickToStart: 'ÁÇπÂáª‰∏ãÊñπËΩ¨Êç¢ÊåâÈíÆÂºÄÂßãËΩ¨Êç¢',
    },
    converter: {
      header: { title: 'ÂõæÁâáÊ†ºÂºèËΩ¨Êç¢Âô®', batch: 'ÊâπÈáèËΩ¨Êç¢', history: 'ÂéÜÂè≤ËÆ∞ÂΩï', help: 'Â∏ÆÂä©' },
      upload: '‰∏ä‰º†ÂõæÁâá',
      stats: { uploaded: 'Â∑≤‰∏ä‰º†', converted: 'Â∑≤ËΩ¨Êç¢', progress: 'ËΩ¨Êç¢ËøõÂ∫¶' },
    },
    tools: {
      header: { title: 'Â∑•ÂÖ∑ÁÆ±' },
      nav: { home: 'È¶ñÈ°µ', converter: 'ËΩ¨Êç¢Âô®', help: 'Â∏ÆÂä©' },
      hero: { title: 'Âº∫Â§ßÁöÑÂõæÁâáÂ§ÑÁêÜÂ∑•ÂÖ∑ÁÆ±', subtitle: 'Êèê‰æõÂ§öÁßçÂõæÁâáÂ§ÑÁêÜÂ∑•ÂÖ∑ÔºåÊª°Ë∂≥ÊÇ®ÁöÑÂêÑÁßçÈúÄÊ±Ç„ÄÇ‰ªéÊ†ºÂºèËΩ¨Êç¢Âà∞ÂõæÁâáÁºñËæëÔºå‰ªéÂçïÂº†Â§ÑÁêÜÂà∞ÊâπÈáèÊìç‰ΩúÔºåÊàë‰ª¨ÈÉΩÊúâ‰∏ì‰∏öÁöÑËß£ÂÜ≥ÊñπÊ°à„ÄÇ' },
      categories: { convert: 'ÂõæÁâáËΩ¨Êç¢', process: 'ÂõæÁâáÂ§ÑÁêÜ', doc: 'ÊñáÊ°£Â∑•ÂÖ∑', batch: 'ÊâπÈáèÂ∑•ÂÖ∑' },
      card: { new: 'Êñ∞ÂäüËÉΩ', useNow: 'Á´ãÂç≥‰ΩøÁî®' },
      cards: {
        'png-to-jpg': { title: 'PNGËΩ¨JPG', desc: 'Â∞ÜPNGÂõæÁâáËΩ¨Êç¢‰∏∫JPGÊ†ºÂºèÔºåÊîØÊåÅÊâπÈáèËΩ¨Êç¢' },
        'bmp-to-jpg': { title: 'BMPËΩ¨JPG', desc: 'Â∞ÜBMPÂõæÁâáËΩ¨Êç¢‰∏∫JPGÊ†ºÂºèÔºå‰øùÊåÅÂõæÁâáË¥®Èáè' },
        'gif-to-jpg': { title: 'GIFËΩ¨JPG', desc: 'Â∞ÜGIFÂä®ÁîªËΩ¨Êç¢‰∏∫JPGÈùôÊÄÅÂõæÁâá' },
        'webp-to-jpg': { title: 'WebPËΩ¨JPG', desc: 'Â∞ÜWebPÂõæÁâáËΩ¨Êç¢‰∏∫JPGÊ†ºÂºèÔºåÂÖºÂÆπÊÄßÊõ¥Â•Ω' },
        'image-compress': { title: 'ÂõæÁâáÂéãÁº©', desc: 'Êô∫ËÉΩÂéãÁº©ÂõæÁâáÔºåÂáèÂ∞èÊñá‰ª∂Â§ßÂ∞èÔºå‰øùÊåÅË¥®Èáè' },
        'image-resize': { title: 'ÂõæÁâáË∞ÉÊï¥', desc: 'Ë∞ÉÊï¥ÂõæÁâáÂ∞∫ÂØ∏ÔºåÊîØÊåÅÊâπÈáèÂ§ÑÁêÜ' },
        'image-rotate': { title: 'ÂõæÁâáÊóãËΩ¨', desc: 'ÊóãËΩ¨ÂíåÁøªËΩ¨ÂõæÁâáÔºåÊîØÊåÅÂ§öÁßçËßíÂ∫¶' },
        'image-crop': { title: 'ÂõæÁâáË£ÅÂâ™', desc: 'Á≤æÁ°ÆË£ÅÂâ™ÂõæÁâáÔºåÊîØÊåÅËá™ÂÆö‰πâÂå∫Âüü' },
        'image-to-pdf': { title: 'ÂõæÁâáËΩ¨PDF', desc: 'Â∞ÜÂ§öÂº†ÂõæÁâáÂêàÂπ∂‰∏∫PDFÊñáÊ°£' },
        'pdf-to-image': { title: 'PDFËΩ¨ÂõæÁâá', desc: 'Â∞ÜPDFÈ°µÈù¢ËΩ¨Êç¢‰∏∫ÂõæÁâáÊ†ºÂºè' },
        'batch-convert': { title: 'ÊâπÈáèËΩ¨Êç¢', desc: 'ÊâπÈáèËΩ¨Êç¢Â§öÁßçÊ†ºÂºèÔºåÊèêÈ´òÂ∑•‰ΩúÊïàÁéá' },
        'batch-rename': { title: 'ÊâπÈáèÈáçÂëΩÂêç', desc: 'ÊâπÈáèÈáçÂëΩÂêçÂõæÁâáÊñá‰ª∂ÔºåÊîØÊåÅÂ§öÁßçËßÑÂàô' },
      },
      why: { title: '‰∏∫‰ªÄ‰πàÈÄâÊã©Êàë‰ª¨ÁöÑÂ∑•ÂÖ∑ÁÆ±Ôºü' },
    },
  },
};

const I18nContext = createContext<I18nContextValue | undefined>(undefined);

export const I18nProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const [locale, setLocaleState] = useState<Locale>(() => {
    const saved = localStorage.getItem('locale');
    if (saved === 'en' || saved === 'zh-CN') return saved;
    return 'en';
  });

  useEffect(() => {
    localStorage.setItem('locale', locale);
    document.documentElement.lang = locale === 'zh-CN' ? 'zh' : 'en';
  }, [locale]);

  const setLocale = useCallback((l: Locale) => setLocaleState(l), []);

  const t = useCallback(
    (key: string) => {
      const parts = key.split('.');
      let obj: any = defaultMessages[locale];
      for (const p of parts) {
        if (obj && typeof obj === 'object' && p in obj) {
          obj = (obj as any)[p];
        } else {
          obj = undefined;
          break;
        }
      }
      return typeof obj === 'string' ? obj : key;
    },
    [locale]
  );

  const value = useMemo<I18nContextValue>(() => ({ locale, setLocale, t }), [locale, setLocale, t]);

  return <I18nContext.Provider value={value}>{children}</I18nContext.Provider>;
};

export const useI18n = (): I18nContextValue => {
  const ctx = useContext(I18nContext);
  if (!ctx) throw new Error('useI18n must be used within I18nProvider');
  return ctx;
}; 